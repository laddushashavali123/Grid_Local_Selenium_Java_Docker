<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>myAuto</groupId>
    <artifactId>myAuto</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- Default value for a variable -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Selenium profile Parameter -->
        <suite>firefox_local</suite>
        <retryFailed>0</retryFailed>

        <!-- jMeter Profile Parameter -->
        <jmeter.maven.plugin.version>2.7.0</jmeter.maven.plugin.version>
        <jmeter.analysis.maven.plugin.version>1.0.6</jmeter.analysis.maven.plugin.version>
        <jmeter.test.directory>${project.basedir}\src\test\jmeter\</jmeter.test.directory>
        <test.duration>30</test.duration>
        <test.threads>10</test.threads>

        <!-- Dependency versions for quickly update -->
        <selinium.version>3.7.1</selinium.version>
        <testNG.version>6.11</testNG.version>
        <maven.surefire.plugin.version>2.20.1</maven.surefire.plugin.version>
        <logback.classic.version>1.2.3</logback.classic.version>
        <sikuliX.version>1.1.1</sikuliX.version>
        <apache.POI.OOXML.version>3.17</apache.POI.OOXML.version>
        <mysql-connector-java>8.0.9-rc</mysql-connector-java>
        <appium.version>5.0.4</appium.version>
        <cucumber.version>1.2.5</cucumber.version>
    </properties>

    <!-- Set compile Java SDK to Java 8 if PC has a lot of Java version, and specific maven compiler plugin version -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Maven profile enable us to isolate our Selenium tests from the rest of the build if desired, so that we can
         turn them in a separate UI block of tests on our continuous integration server. A profile called selenium is
         created. If we want to run this in isolation we can now use the following command:
            mvn clean install â€“Pselenium -->
    <profiles>
        <profile>
            <id>selenium</id>
            <activation>
                <!-- this will ensure that this profile is active if no profiles are specified on the command line -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>1.0.17</version>
                        <configuration>
                            <!-- root directory that downloaded driver binaries will be stored in -->
                            <rootStandaloneServerDirectory>${project.basedir}/resources/drivers/binaries</rootStandaloneServerDirectory>
                            <!-- Where you want to store downloaded zip files -->
                            <downloadedZipFileDirectory>${project.basedir}/resources/drivers/zips</downloadedZipFileDirectory>
                            <!-- Location of a custom repository map -->
                            <customRepositoryMap>${project.basedir}/resources/drivers/RepositoryMap.xml</customRepositoryMap>
                            <!-- This will ensure that the plugin only downloads binaries for the current OS, this will
                            override anything specified in the <operatingSystems> configuration -->
                            <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
                            <!-- Download 32bit binaries -->
                            <thirtyTwoBitBinaries>false</thirtyTwoBitBinaries>
                            <!-- Download 64bit binaries -->
                            <sixtyFourBitBinaries>true</sixtyFourBitBinaries>
                            <!-- If set to false will download every version available -->
                            <onlyGetLatestVersions>true</onlyGetLatestVersions>
                            <!-- Overwrite any existing binaries that have been downloaded and extracted -->
                            <overwriteFilesThatExist>true</overwriteFilesThatExist>
                            <!-- Number of times to attempt to download each file -->
                            <fileDownloadRetryAttempts>2</fileDownloadRetryAttempts>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.plugin.version}</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>suites/${suite}.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <!-- Global variables which can change via maven command line, class ca also get this value -->
                            <systemPropertyVariables>
                                <screenshotDirectory>${project.basedir}\screenshoots</screenshotDirectory>
                                <logback.configurationFile>${project.basedir}\logback.xml</logback.configurationFile>
                                <retryFailed>${retryFailed}</retryFailed>
                                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                                <webdriver.gecko.driver>${webdriver.gecko.driver}</webdriver.gecko.driver>
                                <webdriver.ie.driver>${webdriver.ie.driver}</webdriver.ie.driver>
                                <webdriver.opera.driver>${webdriver.opera.driver}</webdriver.opera.driver>
                                <proxyEnabled>false</proxyEnabled>
                                <proxyHost/>
                                <proxyPort/>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>cucumber</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin</artifactId>
                        <version>1.0.17</version>
                        <configuration>
                            <!-- root directory that downloaded driver binaries will be stored in -->
                            <rootStandaloneServerDirectory>${project.basedir}/resources/drivers/binaries</rootStandaloneServerDirectory>
                            <!-- Where you want to store downloaded zip files -->
                            <downloadedZipFileDirectory>${project.basedir}/resources/drivers/zips</downloadedZipFileDirectory>
                            <!-- Location of a custom repository map -->
                            <customRepositoryMap>${project.basedir}/resources/drivers/RepositoryMap.xml</customRepositoryMap>
                            <!-- This will ensure that the plugin only downloads binaries for the current OS, this will
                            override anything specified in the <operatingSystems> configuration -->
                            <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
                            <!-- Download 32bit binaries -->
                            <thirtyTwoBitBinaries>false</thirtyTwoBitBinaries>
                            <!-- Download 64bit binaries -->
                            <sixtyFourBitBinaries>true</sixtyFourBitBinaries>
                            <!-- If set to false will download every version available -->
                            <onlyGetLatestVersions>true</onlyGetLatestVersions>
                            <!-- Overwrite any existing binaries that have been downloaded and extracted -->
                            <overwriteFilesThatExist>true</overwriteFilesThatExist>
                            <!-- Number of times to attempt to download each file -->
                            <fileDownloadRetryAttempts>2</fileDownloadRetryAttempts>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.plugin.version}</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>suites/cucumber.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <systemPropertyVariables>
                                <screenshotDirectory>${project.basedir}\screenshoots</screenshotDirectory>
                                <logback.configurationFile>${project.basedir}\logback.xml</logback.configurationFile>
                                <retryFailed>${retryFailed}</retryFailed>
                                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                                <webdriver.firefox.driver>${webdriver.firefox.driver}</webdriver.firefox.driver>
                                <webdriver.ie.driver>${webdriver.ie.driver}</webdriver.ie.driver>
                                <webdriver.opera.driver>${webdriver.opera.driver}</webdriver.opera.driver>
                                <proxyEnabled>false</proxyEnabled>
                                <proxyHost/>
                                <proxyPort/>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                        <version>3.16.0</version>
                        <executions>
                            <execution>
                                <id>execution</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <projectName>myAuto</projectName>  <!-- Replace with project name -->
                                    <outputDirectory>${project.build.directory}/cucumber-reports</outputDirectory>
                                    <jsonFiles>
                                        <!-- supports wildcard or name pattern -->
                                        <param>${project.build.directory}\cucumber-reports\json-reports\CucumberTestReport .json</param>
                                    </jsonFiles>
                                    <parallelTesting>false</parallelTesting>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>net.serenity-bdd.maven.plugins</groupId>
                        <artifactId>serenity-maven-plugin</artifactId>
                        <version>1.9.31</version>
                        <executions>
                            <execution>
                                <id>serenity-reports</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jmeter</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>${jmeter.maven.plugin.version}</version>
                        <executions>
                            <!-- Run JMeter tests -->
                            <execution>
                                <id>jmeter-tests</id>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testNG.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <version>${selinium.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.classic.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sikulix</groupId>
            <artifactId>sikulixapi</artifactId>
            <version>${sikuliX.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${apache.POI.OOXML.version}</version>
        </dependency>

        <!-- Cucumber dependency -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>3.16.0</version>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>1.2.5</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Serenity dependency -->
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-core</artifactId>
            <version>1.9.31</version>
        </dependency>
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-cucumber</artifactId>
            <version>1.9.12</version>
        </dependency>
        <dependency>
            <groupId>net.serenity-bdd.maven.plugins</groupId>
            <artifactId>serenity-maven-plugin</artifactId>
            <version>1.9.31</version>
        </dependency>



        <!-- MySQL dependency -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java}</version>
        </dependency>

        <!-- Appium dependency -->
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>${appium.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.expectit</groupId>
            <artifactId>expectit-core</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180130</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.9.0</version>
            <scope>test</scope>
        </dependency>


    </dependencies>
</project>